// Code generated by protoc-gen-go. DO NOT EDIT.
// source: advertise.proto

/*
Package advertise is a generated protocol buffer package.

It is generated from these files:
	advertise.proto

It has these top-level messages:
	AdvertiseMessage
	AdvertiseAck
*/
package advertise

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AdvertiseMessage struct {
	Port string `protobuf:"bytes,1,opt,name=port" json:"port,omitempty"`
}

func (m *AdvertiseMessage) Reset()                    { *m = AdvertiseMessage{} }
func (m *AdvertiseMessage) String() string            { return proto.CompactTextString(m) }
func (*AdvertiseMessage) ProtoMessage()               {}
func (*AdvertiseMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AdvertiseMessage) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type AdvertiseAck struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *AdvertiseAck) Reset()                    { *m = AdvertiseAck{} }
func (m *AdvertiseAck) String() string            { return proto.CompactTextString(m) }
func (*AdvertiseAck) ProtoMessage()               {}
func (*AdvertiseAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AdvertiseAck) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*AdvertiseMessage)(nil), "advertise.AdvertiseMessage")
	proto.RegisterType((*AdvertiseAck)(nil), "advertise.AdvertiseAck")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Advertise service

type AdvertiseClient interface {
	Send(ctx context.Context, in *AdvertiseMessage, opts ...grpc.CallOption) (*AdvertiseAck, error)
}

type advertiseClient struct {
	cc *grpc.ClientConn
}

func NewAdvertiseClient(cc *grpc.ClientConn) AdvertiseClient {
	return &advertiseClient{cc}
}

func (c *advertiseClient) Send(ctx context.Context, in *AdvertiseMessage, opts ...grpc.CallOption) (*AdvertiseAck, error) {
	out := new(AdvertiseAck)
	err := grpc.Invoke(ctx, "/advertise.Advertise/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Advertise service

type AdvertiseServer interface {
	Send(context.Context, *AdvertiseMessage) (*AdvertiseAck, error)
}

func RegisterAdvertiseServer(s *grpc.Server, srv AdvertiseServer) {
	s.RegisterService(&_Advertise_serviceDesc, srv)
}

func _Advertise_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdvertiseMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertiseServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/advertise.Advertise/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertiseServer).Send(ctx, req.(*AdvertiseMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Advertise_serviceDesc = grpc.ServiceDesc{
	ServiceName: "advertise.Advertise",
	HandlerType: (*AdvertiseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Advertise_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "advertise.proto",
}

func init() { proto.RegisterFile("advertise.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4c, 0x29, 0x4b,
	0x2d, 0x2a, 0xc9, 0x2c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xa9, 0x71, 0x09, 0x38, 0xc2, 0x38, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x42, 0x42, 0x5c,
	0x2c, 0x05, 0xf9, 0x45, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x1c,
	0x17, 0x0f, 0x5c, 0x9d, 0x63, 0x72, 0xb6, 0x10, 0x1f, 0x17, 0x53, 0x7e, 0x36, 0x58, 0x05, 0x47,
	0x10, 0x53, 0x7e, 0xb6, 0x91, 0x37, 0x17, 0x27, 0x5c, 0x5e, 0xc8, 0x8e, 0x8b, 0x25, 0x38, 0x35,
	0x2f, 0x45, 0x48, 0x5a, 0x0f, 0x61, 0x33, 0xba, 0x2d, 0x52, 0xe2, 0xd8, 0x24, 0x1d, 0x93, 0xb3,
	0x95, 0x18, 0x92, 0xd8, 0xc0, 0xce, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x88, 0x08,
	0x6d, 0xb9, 0x00, 0x00, 0x00,
}
