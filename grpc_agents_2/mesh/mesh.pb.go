// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh.proto

/*
Package mesh is a generated protocol buffer package.

It is generated from these files:
	mesh.proto

It has these top-level messages:
	StatusMessage
	NodesMessage
	None
*/
package mesh

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusMessage struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
}

func (m *StatusMessage) Reset()                    { *m = StatusMessage{} }
func (m *StatusMessage) String() string            { return proto.CompactTextString(m) }
func (*StatusMessage) ProtoMessage()               {}
func (*StatusMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StatusMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type NodesMessage struct {
	Nodes []*StatusMessage `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *NodesMessage) Reset()                    { *m = NodesMessage{} }
func (m *NodesMessage) String() string            { return proto.CompactTextString(m) }
func (*NodesMessage) ProtoMessage()               {}
func (*NodesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NodesMessage) GetNodes() []*StatusMessage {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type None struct {
}

func (m *None) Reset()                    { *m = None{} }
func (m *None) String() string            { return proto.CompactTextString(m) }
func (*None) ProtoMessage()               {}
func (*None) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*StatusMessage)(nil), "mesh.StatusMessage")
	proto.RegisterType((*NodesMessage)(nil), "mesh.NodesMessage")
	proto.RegisterType((*None)(nil), "mesh.None")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MeshInfo service

type MeshInfoClient interface {
	GetNodes(ctx context.Context, in *StatusMessage, opts ...grpc.CallOption) (*NodesMessage, error)
}

type meshInfoClient struct {
	cc *grpc.ClientConn
}

func NewMeshInfoClient(cc *grpc.ClientConn) MeshInfoClient {
	return &meshInfoClient{cc}
}

func (c *meshInfoClient) GetNodes(ctx context.Context, in *StatusMessage, opts ...grpc.CallOption) (*NodesMessage, error) {
	out := new(NodesMessage)
	err := grpc.Invoke(ctx, "/mesh.MeshInfo/GetNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MeshInfo service

type MeshInfoServer interface {
	GetNodes(context.Context, *StatusMessage) (*NodesMessage, error)
}

func RegisterMeshInfoServer(s *grpc.Server, srv MeshInfoServer) {
	s.RegisterService(&_MeshInfo_serviceDesc, srv)
}

func _MeshInfo_GetNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshInfoServer).GetNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mesh.MeshInfo/GetNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshInfoServer).GetNodes(ctx, req.(*StatusMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeshInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mesh.MeshInfo",
	HandlerType: (*MeshInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNodes",
			Handler:    _MeshInfo_GetNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mesh.proto",
}

func init() { proto.RegisterFile("mesh.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0x2d, 0xce,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x34, 0xb9, 0x78, 0x83, 0x4b,
	0x12, 0x4b, 0x4a, 0x8b, 0x7d, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0x13,
	0x53, 0x52, 0x8a, 0x52, 0x8b, 0x8b, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x25,
	0x4b, 0x2e, 0x1e, 0xbf, 0xfc, 0x94, 0x54, 0xb8, 0x4a, 0x4d, 0x2e, 0xd6, 0x3c, 0x10, 0x5f, 0x82,
	0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x58, 0x0f, 0x6c, 0x38, 0x8a, 0x69, 0x41, 0x10, 0x15, 0x4a,
	0x6c, 0x5c, 0x2c, 0x7e, 0xf9, 0x79, 0xa9, 0x46, 0x8e, 0x5c, 0x1c, 0xbe, 0xa9, 0xc5, 0x19, 0x9e,
	0x79, 0x69, 0xf9, 0x42, 0xa6, 0x5c, 0x1c, 0xee, 0xa9, 0x25, 0x60, 0x13, 0x85, 0xb0, 0xe9, 0x95,
	0x12, 0x82, 0x08, 0x22, 0xdb, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0xbd, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x11, 0x00, 0x7e, 0x8e, 0xcb, 0x00, 0x00, 0x00,
}
